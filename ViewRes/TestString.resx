<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_BringBack" xml:space="preserve">
    <value>Bring Me Back Home!!!</value>
  </data>
  <data name="Error_Description" xml:space="preserve">
    <value>Uh... So it looks like you break something. The page you are looking for has up and vanished.</value>
  </data>
  <data name="Error_Message" xml:space="preserve">
    <value>We Couldn’t Find This Page</value>
  </data>
  <data name="Name_Company" xml:space="preserve">
    <value>TanNhatTrung</value>
  </data>
  <data name="String_AboutUs" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="String_Address" xml:space="preserve">
    <value>31 Ong Nuoc Tho D1800 mm street, Tan Hoa, Dong Hoa ward, Di An town, Binh Duong</value>
  </data>
  <data name="String_AddToCart" xml:space="preserve">
    <value>Add to cart</value>
  </data>
  <data name="String_AddToCompare" xml:space="preserve">
    <value>Add to compare</value>
  </data>
  <data name="String_AddToWishList" xml:space="preserve">
    <value>Add to wishlist</value>
  </data>
  <data name="String_Brand" xml:space="preserve">
    <value>Brand</value>
  </data>
  <data name="String_Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="String_CompanyInfo" xml:space="preserve">
    <value>Founded in 2010, Tan Nhat Trung Co. Ltd. specialises in wood products and forestry plantation management. The company main target is to supply wooden furniture, veeners, MDF, HDF and wood pellets. We try to aim to a non-waste production from manufacturing to recycling by-products. Tan NhatTrung group has established itself with a firm commitment to bring not only high quality products but also ensure and protect the environment. Our principle is to continue to pursuit of new materials, clever designs and new technologies and therefore we can bring to our customers high quality products with competitive price.</value>
  </data>
  <data name="String_ContactInfo" xml:space="preserve">
    <value>Contact Info</value>
  </data>
  <data name="String_ContactUs" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="String_CopyRight" xml:space="preserve">
    <value>Copyright © 2016 TanNhatTrung Co. Ltd. All rights reserved.</value>
  </data>
  <data name="String_Description" xml:space="preserve">
    <value>Wood Product Dealer</value>
  </data>
  <data name="String_DesignBy" xml:space="preserve">
    <value>Designed by</value>
  </data>
  <data name="String_Detail" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="String_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="String_EmailSupport" xml:space="preserve">
    <value>support@tannhattrung.com</value>
  </data>
  <data name="String_Fax" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="String_FeatureItem" xml:space="preserve">
    <value>Feature Items</value>
  </data>
  <data name="String_GetItNow" xml:space="preserve">
    <value>Get it now</value>
  </data>
  <data name="String_Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="String_Mobile" xml:space="preserve">
    <value>Mobile </value>
  </data>
  <data name="String_MobileNumber" xml:space="preserve">
    <value>+84 903 086 171</value>
  </data>
  <data name="String_OnlineHelp" xml:space="preserve">
    <value>Online Help</value>
  </data>
  <data name="String_PriceRange" xml:space="preserve">
    <value>Price Range</value>
  </data>
  <data name="String_Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="String_Review" xml:space="preserve">
    <value>Reviews</value>
  </data>
  <data name="String_ReviewDescription" xml:space="preserve">
    <value>Please enter your review here!</value>
  </data>
  <data name="String_Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="String_Service" xml:space="preserve">
    <value>Service</value>
  </data>
  <data name="String_Slogan" xml:space="preserve">
    <value>new materials - clever designs - new technologies</value>
  </data>
  <data name="String_SocialNetworking" xml:space="preserve">
    <value>Social Networking</value>
  </data>
  <data name="String_Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="String_View" xml:space="preserve">
    <value>Views</value>
  </data>
  <data name="String_ViewDetail" xml:space="preserve">
    <value>View details</value>
  </data>
  <data name="String_Welcome" xml:space="preserve">
    <value>Welcome to Tan Nhat Trung Co. Ltd</value>
  </data>
  <data name="Title_Home" xml:space="preserve">
    <value>Home | Tan Nhat Trung Co. Ltd</value>
  </data>
  <data name="Title_Product" xml:space="preserve">
    <value>Product | Tan Nhat Trung Co. Ltd</value>
  </data>
</root>